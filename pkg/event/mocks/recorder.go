// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// EventRecorder is an autogenerated mock type for the EventRecorder type
type EventRecorder struct {
	mock.Mock
}

// BackOffPullImage provides a mock function with given fields: ctx, image, containerName, err
func (_m *EventRecorder) BackOffPullImage(ctx context.Context, image string, containerName string, err error) {
	_m.Called(ctx, image, containerName, err)
}

// CreatedContainer provides a mock function with given fields: ctx, containerName
func (_m *EventRecorder) CreatedContainer(ctx context.Context, containerName string) {
	_m.Called(ctx, containerName)
}

// FailedPostStartHook provides a mock function with given fields: ctx, containerName, cmd, err
func (_m *EventRecorder) FailedPostStartHook(ctx context.Context, containerName string, cmd []string, err error) {
	_m.Called(ctx, containerName, cmd, err)
}

// FailedPreStopHook provides a mock function with given fields: ctx, containerName, cmd, err
func (_m *EventRecorder) FailedPreStopHook(ctx context.Context, containerName string, cmd []string, err error) {
	_m.Called(ctx, containerName, cmd, err)
}

// FailedToCreateContainer provides a mock function with given fields: ctx, containerName, err
func (_m *EventRecorder) FailedToCreateContainer(ctx context.Context, containerName string, err error) {
	_m.Called(ctx, containerName, err)
}

// FailedToPullImage provides a mock function with given fields: ctx, image, containerName, err
func (_m *EventRecorder) FailedToPullImage(ctx context.Context, image string, containerName string, err error) {
	_m.Called(ctx, image, containerName, err)
}

// FailedToStartContainer provides a mock function with given fields: ctx, containerName, err
func (_m *EventRecorder) FailedToStartContainer(ctx context.Context, containerName string, err error) {
	_m.Called(ctx, containerName, err)
}

// FailedToValidateOCI provides a mock function with given fields: ctx, content
func (_m *EventRecorder) FailedToValidateOCI(ctx context.Context, content string) {
	_m.Called(ctx, content)
}

// PulledImage provides a mock function with given fields: ctx, image, containerName, duration
func (_m *EventRecorder) PulledImage(ctx context.Context, image string, containerName string, duration string) {
	_m.Called(ctx, image, containerName, duration)
}

// PullingImage provides a mock function with given fields: ctx, image, containerName
func (_m *EventRecorder) PullingImage(ctx context.Context, image string, containerName string) {
	_m.Called(ctx, image, containerName)
}

// StartedContainer provides a mock function with given fields: ctx, containerName
func (_m *EventRecorder) StartedContainer(ctx context.Context, containerName string) {
	_m.Called(ctx, containerName)
}

// NewEventRecorder creates a new instance of EventRecorder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEventRecorder(t interface {
	mock.TestingT
	Cleanup(func())
}) *EventRecorder {
	mock := &EventRecorder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
